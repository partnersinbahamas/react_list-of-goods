{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","SortByAlphabetically","setState","ALPHABET","SortByLength","LENGTH","revese","this","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","console","log","getReorderedGoods","original","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,OAAS,WACP,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,4CAoBE,WAAU,IAAD,OACP,EAAiCS,KAAKV,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdS,EAxDH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQb,GACN,KAAKL,EAASS,SACZ,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKlB,EAASW,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAIThB,GACFW,EAAaM,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfW,EA8BSS,CAAkBvB,EAAiB,CAAEI,WAAUD,eACvDqB,GAA0B,IAAfrB,GAAwBC,IAAaL,EAASM,KAE/D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYvB,IAAaL,EAASS,WAEtCoB,QAAShB,KAAKN,qBAPhB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYvB,IAAaL,EAASW,SAEtCkB,QAAShB,KAAKH,aAPhB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfxB,IAEhByB,QAAShB,KAAKD,OAPhB,sBAYEa,GAEF,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKrB,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QAJ1D,sBAYF,6BACGQ,EAAMgB,KAAI,SAACC,GACV,OACE,6BACGA,GADMA,eAjFvB,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb83ca6c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a: string, b: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  SortByAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  SortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  revese = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n    const original = isReversed === false && sortType === SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.SortByAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.SortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed !== true },\n            )}\n            onClick={this.revese}\n          >\n            Reverse\n          </button>\n\n          {!original\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              this.setState({ isReversed: false, sortType: SortType.NONE });\n            }}\n          >\n            Reset\n          </button>\n        )}\n        </div>\n\n        <ul>\n          {goods.map((good) => {\n            return (\n              <li key={good}>\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}